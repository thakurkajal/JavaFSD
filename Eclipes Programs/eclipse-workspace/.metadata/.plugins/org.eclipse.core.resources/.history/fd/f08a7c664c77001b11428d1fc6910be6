package com.kajal.banking.wallet;

import java.math.BigDecimal;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.kajal.banking.Customer;
import com.kajal.banking.Wallet;
import com.kajal.banking.connection.DatabaseConnection;

public class WalletInfo implements WalletService{

	DatabaseConnection dbutil=new DatabaseConnection();
	public WalletInfo(){

	}
	public boolean save(Customer customer) throws SQLException, ClassNotFoundException{
		Connection con=dbutil.getConnection();
		Customer customer1=findOne(customer.getMobileNo());
		if(customer1==null){
			PreparedStatement pst=con.prepareStatement("insert into wallet values(?,?,?)");
			pst.setString(1, customer.getName());
			pst.setString(2, customer.getMobileNo());
			pst.setBigDecimal(3, customer.getWallet().getBalance());
			pst.executeUpdate();
			return true;	
		}
		else if(customer1.getMobileNo().equals(customer.getMobileNo()))
		{
			PreparedStatement pst=con.prepareStatement("update wallet set balance=? where mobNo=?");
			pst.setBigDecimal(1, customer.getWallet().getBalance());
			System.out.println(customer.getWallet().getBalance());
			pst.setString(2, customer.getMobileNo());
			pst.executeUpdate();
		return true;
			
		}
		else
			return false;
		}


		public Customer findOne(String mobileNo) throws ClassNotFoundException, SQLException 
		{
			String name=null;
			String mobile=null;
			BigDecimal amount=new BigDecimal(0.0);
			
			Connection con=dbutil.getConnection();
		Statement st=con.createStatement();
		String query=String.format("select * from wallet where '%s'= mobNo", mobileNo);
		ResultSet rs=st.executeQuery(query);
		if(rs.next())
		{
			name=rs.getString(1);	
			 mobile=rs.getString(2);
			amount=rs.getBigDecimal(3);
		}
		if(mobile==null)
		{
			return null;
		}
		else if(mobile.equals(mobileNo))
			{
				Wallet wallet=new Wallet(amount);
				Customer customer=new Customer(name,mobile,wallet);
				return customer;
			}
		else
			return null;
		}


		public Customer createAccount(String name, String mobileno, BigDecimal amount) {
			
			return null;
		}


		public Customer showBalance(String mobileno) {
			
			return null;
		}


		public Customer fundTransfer(String sourceMobileNo, String targetMobileNo, BigDecimal amount) {
			
			return null;
		}


		public Customer depositAmount(String mobileNo, BigDecimal amount) {
			
			return null;
		}


		public Customer withdrawAmount(String mobileNo, BigDecimal amount) {
			
			return null;
		}
	}

